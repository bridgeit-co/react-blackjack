[{"filePath":"/Users/MacbookAir/code/falkenryder/react_blackjack2/src/App.js","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'shuffleDeck'. Either include it or remove the dependency array.","line":26,"column":6,"nodeType":"ArrayExpression","endLine":26,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [shuffleDeck]","fix":{"range":[830,832],"text":"[shuffleDeck]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'dealerCardCount', 'dealerScore', 'userCardCount', and 'userScore'. Either include them or remove the dependency array.","line":44,"column":6,"nodeType":"ArrayExpression","endLine":44,"endColumn":18,"suggestions":[{"desc":"Update the dependencies array to be: [dealerCardCount, dealerScore, gameStatus, userCardCount, userScore]","fix":{"range":[1456,1468],"text":"[dealerCardCount, dealerScore, gameStatus, userCardCount, userScore]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'handleDealerTurn'. Either include it or remove the dependency array.","line":50,"column":6,"nodeType":"ArrayExpression","endLine":50,"endColumn":17,"suggestions":[{"desc":"Update the dependencies array to be: [handleDealerTurn, userScore]","fix":{"range":[1556,1567],"text":"[handleDealerTurn, userScore]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'drawCard' and 'gameStatus'. Either include them or remove the dependency array.","line":60,"column":6,"nodeType":"ArrayExpression","endLine":60,"endColumn":19,"suggestions":[{"desc":"Update the dependencies array to be: [dealerScore, drawCard, gameStatus]","fix":{"range":[1755,1768],"text":"[dealerScore, drawCard, gameStatus]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport './styles/App.css';\nimport deckJson from './deck.json';\nimport Wallet from './components/Wallet.js';\nimport Hand from './components/Hand.js';\nimport Controls from './components/Controls.js';\n\nexport default function App() {\n  const data = JSON.parse(JSON.stringify(deckJson));\n  const [deck, setDeck] = useState([]);\n\n  const shuffleDeck = () => {\n    // Shuffle a new deck using the Fisher-Yates algorithm\n    const shuffledDeck = data.cards;\n    for (let i = shuffledDeck.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledDeck[i], shuffledDeck[j]] = [shuffledDeck[j], shuffledDeck[i]];\n    }\n\n    // Update the deck in state with the shuffled deck\n    setDeck(shuffledDeck);\n  };\n\n  useEffect(() => {\n    shuffleDeck();\n  }, []);\n\n  const [gameStatus, setGameStatus] = useState(\"bet\");\n  const [message, setMessage] = useState(\"Welcome to React Blackjack! Place your bet to begin.\");\n\n  const [userScore, setUserScore] = useState(0);\n  const [userCards, setUserCards] = useState([]);\n  const [userCardCount, setUserCardCount] = useState(0);\n\n  const [dealerScore, setDealerScore] = useState(0);\n  const [dealerCards, setDealerCards] = useState([]);\n  const [dealerCardCount, setDealerCardCount] = useState(0);\n\n\n  useEffect(() => {\n    if (gameStatus === \"resolve\") {\n      checkWin(userScore, userCardCount, dealerScore, dealerCardCount);\n    }\n  }, [gameStatus]);\n\n  useEffect(() => {\n    if (userScore >= 21) {\n      handleDealerTurn();\n    }\n  }, [userScore])\n\n  useEffect(() => {\n    if (gameStatus === \"dealerTurn\") {\n      if (dealerScore < 17) {\n        drawCard(\"dealer\");\n      } else {\n        setGameStatus(\"resolve\");\n      }\n    }\n  }, [dealerScore])\n\n\n  useEffect(() => {\n    setUserScore(calculateScore(userCards));\n  }, [userCards]);\n\n  useEffect(() => {\n    setDealerScore(calculateScore(dealerCards));\n  }, [dealerCards]);\n\n\n  const drawCard = (target) => {\n    if (deck.length > 0) {\n      const card = deck.pop();\n      setDeck([...deck]);\n      switch (card.suit) {\n        case 'spades':\n          dealCard(target, card.value, '♠');\n          break;\n        case 'diamonds':\n          dealCard(target, card.value, '♦');\n          break;\n        case 'clubs':\n          dealCard(target, card.value, '♣');\n          break;\n        case 'hearts':\n          dealCard(target, card.value, '♥');\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  const handleDealerTurn = () => {\n    setGameStatus(\"dealerTurn\");\n    revealCard();\n  };\n\n  const revealCard = () => {\n    dealerCards.forEach((card) => {\n      if (card.hidden === true) {\n        card.hidden = false;\n        setDealerCardCount(count => count++);\n      }\n    });\n    setDealerCards([...dealerCards]);\n  };\n\n  const dealCard = (target, value, suit) => {\n    switch (target) {\n      case \"user\":\n        userCards.push({ value: value, suit: suit, hidden: false });\n        setUserCards([...userCards]);\n        setUserCardCount(count => count++);\n      break;\n      case \"dealer\":\n        dealerCards.push({ value: value, suit: suit, hidden: false });\n        setDealerCards([...dealerCards]);\n        setDealerCardCount(count => count++);\n      break;\n    case \"dealer-hidden\":\n      dealerCards.push({ value: value, suit: suit, hidden: true });\n      setDealerCards([...dealerCards]);\n      break;\n    default:\n      break;\n    }\n  };\n\n  const checkWin = (userScore, userCardCount, dealerScore, dealerCardCount) => {\n    // Check for Blackjack\n    if ((userCardCount === 2 && userScore === 21) || (dealerCardCount === 2 && dealerScore === 21)) {\n      if (userCardCount === dealerCardCount && dealerScore === userScore) {\n        setMessage('Push! It\\'s a Tie!');\n        setGameStatus(\"draw\");\n      } else if (userCardCount === 2 && userScore === 21) {\n        setMessage('BLACKJACK! You Win!');\n        setGameStatus(\"userBlackjack\");\n      } else {\n        setMessage('Dealer has Blackjack! You Lose!');\n        setGameStatus(\"dealerWon\");\n      }\n      // Check for Bust\n    } else if (userScore > 21) {\n      setMessage('BUST! You Lose!');\n      setGameStatus(\"dealerWon\");\n    } else if (dealerScore > 21 ) {\n      setMessage('Dealer Bust! You Win!');\n      setGameStatus(\"userWon\");\n      // Standard win/loss conditions\n    } else {\n      if (dealerScore > userScore) {\n        setMessage('Dealer Wins!');\n        setGameStatus(\"dealerWon\");\n      } else if (dealerScore < userScore) {\n        setMessage('You Win!');\n        setGameStatus(\"userWon\");\n      } else {\n        setMessage('Push! It\\'s a Tie!');\n        setGameStatus(\"draw\");\n      }\n    }\n  }\n\n  const handlePlaceBet = () => {\n    setMessage(\"\");\n    // deal cards\n    drawCard(\"user\");\n    drawCard(\"dealer-hidden\");\n    drawCard(\"user\");\n    drawCard(\"dealer\");\n    // set game status to \"userTurn\"\n    setGameStatus(\"userTurn\");\n  };\n\n  const handleGameOver = () => {\n    setGameStatus(\"gameOver\");\n  };\n\n  const handleResetGame = () => {\n    setUserScore(0);\n    setUserCards([]);\n    setDealerScore(0);\n    setDealerCards([]);\n    shuffleDeck();\n    setMessage(\"\");\n    setGameStatus(\"bet\");\n  };\n\n  const calculateScore = (cards) => {\n    let total = 0;\n    cards.forEach((card) => {\n      if (card.hidden === false && card.value !== 'A') {\n        if (card.value === 'J' || card.value === 'Q' || card.value === 'K') {\n          total += 10;\n        } else {\n          total += parseInt(card.value);\n        }\n      }\n    });\n\n    const aces = cards.filter((card) => {\n      return card.value === 'A';\n    });\n    aces.forEach((card) => {\n      if (card.hidden === false) {\n        if (total + 11 > 21) {\n          total += 1;\n        } else if (total + 11 === 21) {\n          if (aces.length > 1) {\n            total += 1;\n          } else {\n            total += 11;\n          }\n        } else {\n          total += 11;\n        }\n      }\n    });\n    return total;\n  };\n\n  return (\n    <div className=\"App\">\n      <Hand cards={dealerCards} score={dealerScore} target=\"Dealer\"/>\n      <div className='grid-container'>\n        <div className='message-container'>{message && <h1>{message}</h1>}</div>\n        <Controls gameStatus={gameStatus} onHit={() => drawCard(\"user\")} onStand={handleDealerTurn} onResetGame={handleResetGame}/>\n      </div>\n      <Hand cards={userCards} score={userScore} target=\"Player\"/>\n      <Wallet gameStatus={gameStatus} onBetChange={handlePlaceBet} onGameOver={handleGameOver}/>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/MacbookAir/code/falkenryder/react_blackjack2/src/components/Card.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/MacbookAir/code/falkenryder/react_blackjack2/src/components/Controls.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/MacbookAir/code/falkenryder/react_blackjack2/src/components/Hand.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/MacbookAir/code/falkenryder/react_blackjack2/src/components/Wallet.js","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'betAmount', 'onGameOver', and 'walletAmount'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setWalletAmount' needs the current value of 'betAmount'.","line":55,"column":6,"nodeType":"ArrayExpression","endLine":55,"endColumn":18,"suggestions":[{"desc":"Update the dependencies array to be: [betAmount, gameStatus, onGameOver, walletAmount]","fix":{"range":[1716,1728],"text":"[betAmount, gameStatus, onGameOver, walletAmount]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// STEP 4: Wallet\n\nimport React, { useEffect, useState } from 'react';\nimport \"../styles/wallet.css\"\n\nexport default function Wallet(props) {\n\n  const gameStatus = props.gameStatus;\n  const onBetChange = props.onBetChange;\n  const onGameOver = props.onGameOver;\n\n  const [betAmount, setBetAmount] = useState(0); // Initial bet amount\n  const [walletAmount, setWalletAmount] = useState(100); // Initial wallet amount\n\n\n  const placeBet = (e) => {\n    e.preventDefault();\n    const inputBet = parseInt(e.target.querySelector('input').value);\n    // check validity of the bet\n    if (inputBet <= walletAmount && inputBet > 0) {\n      setBetAmount(inputBet);\n      setWalletAmount(w => w - inputBet);\n      onBetChange();\n    } else {\n      alert(\"Invalid bet amount! Please enter a valid amount\");\n    }\n  };\n\n  const clearBetInput = () => {\n    Array.from(document.querySelectorAll(\"input\")).forEach(\n      input => (input.value = \"\"))\n  };\n\n  const checkIfBroke = (walletAmount) => {\n    if (walletAmount <= 0) {\n      alert(\"Bust!! You're broke - Hit New Game to try again 🥲\");\n      setWalletAmount(100);\n    }\n  };\n\n  useEffect(() => {\n    if (gameStatus === 'userBlackjack') {\n      setWalletAmount(w => w + (betAmount * 2.5));// Blackjack pays 3 to 2\n      onGameOver();\n    } else if (gameStatus === 'userWon') {\n      setWalletAmount(w => w + (betAmount * 2)); // Wins pay 2 to 1\n      onGameOver();\n    } else if (gameStatus === 'draw') {\n      setWalletAmount(w => w + betAmount); // Return bet to wallet\n      onGameOver();\n    } else if (gameStatus === 'dealerWon') {\n      checkIfBroke(walletAmount); // Check if player is broke\n      onGameOver(); // If dealer wins, no need to update wallet\n    }\n  }, [gameStatus]);\n\n  useEffect(() => {\n    if (gameStatus === 'bet') {\n      setBetAmount(0)\n      clearBetInput(); // Reset bet amount && betInput to 0 when game is over\n    }\n  }, [gameStatus]);\n\n  return (\n    <div className=\"walletContainer\" id='wallet'>\n      <h2>Wallet: ${walletAmount}</h2>\n      <h2>Bet: ${betAmount ? betAmount : ''}</h2>\n      {gameStatus === \"bet\" && (\n        <form className=\"betContainer\" onSubmit={placeBet}>\n          <input type=\"number\" className=\"betInput\" id='bet-amount'/>\n          <button type=\"submit\" className=\"betBtn\"><p>Bet</p></button>\n        </form>\n      )}\n    </div>\n  );\n};\n","usedDeprecatedRules":[]},{"filePath":"/Users/MacbookAir/code/falkenryder/react_blackjack2/src/index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/MacbookAir/code/falkenryder/react_blackjack2/src/tests/App.test.js","messages":[],"suppressedMessages":[{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":24,"column":12,"nodeType":"MemberExpression","messageId":"noContainer","endLine":24,"endColumn":35,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":24,"column":22,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":29,"column":22,"nodeType":"MemberExpression","messageId":"noContainer","endLine":29,"endColumn":45,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":29,"column":32,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":29,"column":32,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-unnecessary-act","severity":2,"message":"Avoid wrapping Testing Library util calls in `act`","line":32,"column":5,"nodeType":"Identifier","messageId":"noUnnecessaryActTestingLibraryUtil","endLine":32,"endColumn":8,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":38,"column":12,"nodeType":"MemberExpression","messageId":"noContainer","endLine":38,"endColumn":35,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":38,"column":22,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":39,"column":12,"nodeType":"MemberExpression","messageId":"noContainer","endLine":39,"endColumn":35,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":39,"column":22,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":44,"column":22,"nodeType":"MemberExpression","messageId":"noContainer","endLine":44,"endColumn":45,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":44,"column":32,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":44,"column":32,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-unnecessary-act","severity":2,"message":"Avoid wrapping Testing Library util calls in `act`","line":47,"column":5,"nodeType":"Identifier","messageId":"noUnnecessaryActTestingLibraryUtil","endLine":47,"endColumn":8,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":52,"column":24,"nodeType":"MemberExpression","messageId":"noContainer","endLine":52,"endColumn":47,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":52,"column":34,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":52,"column":34,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":53,"column":30,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":53,"column":30,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":59,"column":22,"nodeType":"MemberExpression","messageId":"noContainer","endLine":59,"endColumn":45,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":59,"column":32,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":59,"column":32,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-unnecessary-act","severity":2,"message":"Avoid wrapping Testing Library util calls in `act`","line":62,"column":5,"nodeType":"Identifier","messageId":"noUnnecessaryActTestingLibraryUtil","endLine":62,"endColumn":8,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":67,"column":24,"nodeType":"MemberExpression","messageId":"noContainer","endLine":67,"endColumn":47,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":67,"column":34,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":67,"column":34,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":68,"column":30,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":68,"column":30,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":74,"column":22,"nodeType":"MemberExpression","messageId":"noContainer","endLine":74,"endColumn":45,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":74,"column":32,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":74,"column":32,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-unnecessary-act","severity":2,"message":"Avoid wrapping Testing Library util calls in `act`","line":77,"column":5,"nodeType":"Identifier","messageId":"noUnnecessaryActTestingLibraryUtil","endLine":77,"endColumn":8,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":82,"column":24,"nodeType":"MemberExpression","messageId":"noContainer","endLine":82,"endColumn":47,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":82,"column":34,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":82,"column":34,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":83,"column":35,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":83,"column":35,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":89,"column":22,"nodeType":"MemberExpression","messageId":"noContainer","endLine":89,"endColumn":45,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":89,"column":32,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":89,"column":32,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-unnecessary-act","severity":2,"message":"Avoid wrapping Testing Library util calls in `act`","line":92,"column":5,"nodeType":"Identifier","messageId":"noUnnecessaryActTestingLibraryUtil","endLine":92,"endColumn":8,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":104,"column":24,"nodeType":"MemberExpression","messageId":"noContainer","endLine":104,"endColumn":47,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":104,"column":34,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":104,"column":34,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":105,"column":30,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":105,"column":30,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":111,"column":22,"nodeType":"MemberExpression","messageId":"noContainer","endLine":111,"endColumn":45,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":111,"column":32,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":111,"column":32,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-unnecessary-act","severity":2,"message":"Avoid wrapping Testing Library util calls in `act`","line":114,"column":5,"nodeType":"Identifier","messageId":"noUnnecessaryActTestingLibraryUtil","endLine":114,"endColumn":8,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":126,"column":24,"nodeType":"MemberExpression","messageId":"noContainer","endLine":126,"endColumn":47,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":126,"column":34,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":126,"column":34,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":127,"column":35,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":127,"column":35,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/MacbookAir/code/falkenryder/react_blackjack2/src/tests/reportWebVitals.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/MacbookAir/code/falkenryder/react_blackjack2/src/tests/setupTests.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]
